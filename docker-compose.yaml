version: '3'

services:
  rabbitmq:
    image: rabbitmq:3.7
    environment:
      - RABBITMQ_MNESIA_BASE=/var/lib/rabbitmq/mnesia
    volumes: 
      - ./data/rabbitmq:/var/lib/rabbitmq/mnesia

  db:
    image: mongo:4
    ports:
      - "27017:27017"
    volumes:
      - ./data/nosql:/data/db

  backend:
    build: ./backend
    volumes:
      - ./backend:/backend
      - ~/.aws:/root/.aws
    environment:
      - ONTASK_DEVELOPMENT=true
      - DJANGO_DEBUG=true
    depends_on:
      - db
    command: uwsgi --ini uwsgi.ini --lazy-apps

  celery:
    build: ./backend
    volumes:
      - ./backend:/backend
      - ~/.aws:/root/.aws
    environment:
      - ONTASK_DEVELOPMENT=true
      - DJANGO_DEBUG=true
    depends_on:
      - rabbitmq
      - backend
    command: celery worker -A ontask --loglevel=INFO

  celery_beat:
    build: ./backend
    environment:
      - ONTASK_DEVELOPMENT=true
      - DJANGO_DEBUG=true
    depends_on:
      - celery
    command: celery -A ontask beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler

  nginx:
    image: nginx:alpine
    volumes:
      - ./dev/nginx.conf:/etc/nginx/nginx.conf
      - ./dev/localhost.crt:/localhost.crt
      - ./dev/localhost.key:/localhost.key
    depends_on:
      - backend
    ports:
      - "8000:443"
    
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/frontend
    environment:
      - HTTPS=true
    depends_on:
      - backend
    command: npm start
